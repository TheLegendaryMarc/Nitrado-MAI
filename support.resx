<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label4.Text" xml:space="preserve">
    <value>Für Anruf in das deutsche Festnetz (+49): Gebühren sind abhängig vom jeweiligen Anbieter. 
Anrufe aus dem Mobilfunk abweichend, max. 42 Cent/Min inkl. USt.
Kosten für Anrufe ins Ausland bitte bei Telefonanbieter erfragen.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        j/8FHJecpRCJltUAAAAASUVORK5CYII=
</value>
  </data>
</root>